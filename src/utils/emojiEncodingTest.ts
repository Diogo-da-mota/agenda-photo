/**
 * Teste de Encoding de Emojis
 * Verifica se os emojis est√£o sendo codificados corretamente para WhatsApp
 */

import { processEmojisForWhatsApp, encodeTextWithEmojisForURL } from './emojiUtils';

// Emojis em diferentes formatos para teste
const emojiTests = {
  // Emojis diretos (problem√°ticos)
  direct: {
    checkMark: '‚úÖ',
    clipboard: 'üìã',
    moneyBag: 'üí∞',
    calendar: 'üìÖ',
    receipt: 'üßæ',
    camera: 'üì∏',
    party: 'üéâ',
    link: 'üîó'
  },
  
  // Emojis em Unicode escape sequences (mais robustos)
  unicode: {
    checkMark: '\u2705',
    clipboard: '\u{1F4CB}',
    moneyBag: '\u{1F4B0}',
    calendar: '\u{1F4C5}',
    receipt: '\u{1F9FE}',
    camera: '\u{1F4F8}',
    party: '\u{1F389}',
    link: '\u{1F517}'
  }
};

// Mensagem de teste com emojis diretos
const mensagemComEmojisDiretos = `Ol√° Jo√£o!

Confirmamos o recebimento do seu pagamento! ‚úÖ

üìã Detalhes do pagamento:
üí∞ Valor: R$ 500,00
üìÖ Data: 15/01/2024
üìã Referente: Sess√£o de fotos
üßæ Comprovante: #2024001

Obrigado pela confian√ßa!

Bright Spark Studio
(11)9 9999-9999`;

// Mensagem de teste com emojis Unicode
const mensagemComEmojisUnicode = `Ol√° Jo√£o!

Confirmamos o recebimento do seu pagamento! \u2705

\u{1F4CB} Detalhes do pagamento:
\u{1F4B0} Valor: R$ 500,00
\u{1F4C5} Data: 15/01/2024
\u{1F4CB} Referente: Sess√£o de fotos
\u{1F9FE} Comprovante: #2024001

Obrigado pela confian√ßa!

Bright Spark Studio
(11)9 9999-9999`;

/**
 * Testa o encoding de emojis em diferentes formatos
 */
export const testarEncodingEmojis = () => {
  console.log('üß™ TESTE DE ENCODING DE EMOJIS');
  console.log('================================');
  
  // Teste 1: Emojis diretos
  console.log('\n1. TESTE COM EMOJIS DIRETOS:');
  console.log('Mensagem original:', mensagemComEmojisDiretos);
  
  const processadaDireta = processEmojisForWhatsApp(mensagemComEmojisDiretos);
  console.log('Ap√≥s processEmojisForWhatsApp:', processadaDireta);
  
  const encodedDireta = encodeTextWithEmojisForURL(processadaDireta);
  console.log('Ap√≥s encodeTextWithEmojisForURL:', encodedDireta);
  
  // Teste 2: Emojis Unicode
  console.log('\n2. TESTE COM EMOJIS UNICODE:');
  console.log('Mensagem original:', mensagemComEmojisUnicode);
  
  const processadaUnicode = processEmojisForWhatsApp(mensagemComEmojisUnicode);
  console.log('Ap√≥s processEmojisForWhatsApp:', processadaUnicode);
  
  const encodedUnicode = encodeTextWithEmojisForURL(processadaUnicode);
  console.log('Ap√≥s encodeTextWithEmojisForURL:', encodedUnicode);
  
  // Teste 3: Compara√ß√£o de tamanhos
  console.log('\n3. COMPARA√á√ÉO DE TAMANHOS:');
  console.log('Tamanho original (diretos):', mensagemComEmojisDiretos.length);
  console.log('Tamanho processado (diretos):', processadaDireta.length);
  console.log('Tamanho encoded (diretos):', encodedDireta.length);
  
  console.log('Tamanho original (unicode):', mensagemComEmojisUnicode.length);
  console.log('Tamanho processado (unicode):', processadaUnicode.length);
  console.log('Tamanho encoded (unicode):', encodedUnicode.length);
  
  // Teste 4: Verifica√ß√£o de caracteres especiais
  console.log('\n4. VERIFICA√á√ÉO DE CARACTERES ESPECIAIS:');
  const caracteresEspeciaisDiretos = mensagemComEmojisDiretos.match(/[^\x00-\x7F]/g);
  const caracteresEspeciaisUnicode = mensagemComEmojisUnicode.match(/[^\x00-\x7F]/g);
  
  console.log('Caracteres n√£o-ASCII (diretos):', caracteresEspeciaisDiretos?.length || 0);
  console.log('Caracteres n√£o-ASCII (unicode):', caracteresEspeciaisUnicode?.length || 0);
  
  return {
    diretos: {
      original: mensagemComEmojisDiretos,
      processada: processadaDireta,
      encoded: encodedDireta
    },
    unicode: {
      original: mensagemComEmojisUnicode,
      processada: processadaUnicode,
      encoded: encodedUnicode
    }
  };
};

/**
 * Testa a convers√£o de emojis individuais
 */
export const testarEmojisIndividuais = () => {
  console.log('\nüîç TESTE DE EMOJIS INDIVIDUAIS');
  console.log('==============================');
  
  Object.entries(emojiTests.direct).forEach(([name, emoji]) => {
    const unicode = emojiTests.unicode[name as keyof typeof emojiTests.unicode];
    
    console.log(`\n${name}:`);
    console.log(`  Direto: ${emoji} (${emoji.charCodeAt(0)})`);
    console.log(`  Unicode: ${unicode} (${unicode.charCodeAt(0)})`);
    console.log(`  Processado (direto): ${processEmojisForWhatsApp(emoji)}`);
    console.log(`  Processado (unicode): ${processEmojisForWhatsApp(unicode)}`);
    console.log(`  Encoded (direto): ${encodeTextWithEmojisForURL(emoji)}`);
    console.log(`  Encoded (unicode): ${encodeTextWithEmojisForURL(unicode)}`);
  });
};

/**
 * Fun√ß√£o principal para executar todos os testes
 */
export const executarTestesCompletos = () => {
  const resultados = testarEncodingEmojis();
  testarEmojisIndividuais();
  
  console.log('\n‚úÖ TESTES CONCLU√çDOS');
  console.log('====================');
  console.log('Verifique os logs acima para identificar problemas de encoding.');
  
  return resultados;
};