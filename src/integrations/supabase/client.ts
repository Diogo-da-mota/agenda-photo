
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://sykjzikcaclutfpuwuri.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN5a2p6aWtjYWNsdXRmcHV3dXJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE0ODAxMTAsImV4cCI6MjA1NzA1NjExMH0.nmOHa9Bcmo7V_kIIqxgJ4ButiX2ybAyhg2U_RWDU0ng";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to check if tables exist and create them if they don't
export const initializeDatabase = async () => {
  console.log('Checking database tables...');
  
  try {
    // More direct approach - try creating the table via RPC first
    console.log('Attempting to create mensagem_agenda table via RPC...');
    
    const { error: createTableError } = await supabase.rpc(
      'create_mensagem_agenda_table',
      {}
    );
    
    if (createTableError) {
      console.error('Error creating mensagem_agenda table via RPC:', createTableError);
      console.log('Will check if table already exists despite RPC error...');
    } else {
      console.log('RPC call to create table completed without errors');
    }
    
    // Now check if the table exists after attempting to create it
    console.log('Verifying if mensagem_agenda table exists...');
    const { error } = await supabase
      .from('mensagem_agenda')
      .select('id')
      .limit(1);
    
    if (error && error.code === '42P01') {
      console.error('Table still does not exist after creation attempt:', error);
      return false;
    } else if (error) {
      // Some other error occurred during verification
      console.error('Error verifying mensagem_agenda table:', error);
      return false;
    } else {
      console.log('mensagem_agenda table verified and exists');
      return true;
    }
  } catch (error) {
    console.error('Error initializing database:', error);
    return false;
  }
};
