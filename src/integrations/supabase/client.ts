
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://sykjzikcaclutfpuwuri.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN5a2p6aWtjYWNsdXRmcHV3dXJpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE0ODAxMTAsImV4cCI6MjA1NzA1NjExMH0.nmOHa9Bcmo7V_kIIqxgJ4ButiX2ybAyhg2U_RWDU0ng";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to check if tables exist and create them if they don't
export const initializeDatabase = async () => {
  console.log('Checking database tables...');
  
  try {
    // Check if mensagem_agenda table exists by attempting to select from it
    const { error } = await supabase
      .from('mensagem_agenda')
      .select('id')
      .limit(1);
    
    // If there's an error and it indicates the table doesn't exist, create it
    if (error && error.code === '42P01') {
      console.log('mensagem_agenda table does not exist, creating it...');
      
      // Create the table using the defined function in the Database type
      const { error: createTableError } = await supabase.rpc(
        'create_mensagem_agenda_table',
        {}
      );
      
      if (createTableError) {
        console.error('Error creating mensagem_agenda table via RPC:', createTableError);
        
        // Let the user know what happened
        return false;
      } else {
        console.log('Successfully created mensagem_agenda table');
        return true;
      }
    } else if (error) {
      // Handle other errors
      console.error('Error checking mensagem_agenda table:', error);
      return false;
    } else {
      console.log('mensagem_agenda table exists');
      return true;
    }
  } catch (error) {
    console.error('Error initializing database:', error);
    return false;
  }
};
